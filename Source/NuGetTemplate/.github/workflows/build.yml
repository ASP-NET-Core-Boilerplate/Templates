name: Build

on:
  push:
    branches:
      - '*'
    tags:
      - '*'

env:
  # Set the DOTNET_SKIP_FIRST_TIME_EXPERIENCE environment variable to stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Set the build number in MinVer
  MINVERBUILDMETADATA: build.${{github.run_number}}

jobs:
  build:
    name: Build-${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        lfs: true
        fetch-depth: 0
    - name: 'Git Fetch Tags'
      run: git fetch --tags
      shell: pwsh
    - name: 'Install .NET Core SDK'
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
    - name: 'Dotnet Tool Restore'
      run: dotnet tool restore
      shell: pwsh
    - name: 'Dotnet Cake Build'
      run: dotnet cake --target=Build
      shell: pwsh
    - name: 'Dotnet Cake Test'
      run: dotnet cake --target=Test
      shell: pwsh
    - name: 'Dotnet Cake Pack'
      run: dotnet cake --target=Pack
      shell: pwsh
    - name: 'Publish Artefacts'
      uses: actions/upload-artifact@v1.0.0
      with:
        name: ${{matrix.os}}
        path: './Artefacts'

    # Push to GitHub Actions
    - name: 'Dotnet NuGet Add GitHub Source'
      if: (matrix.os == 'windows-latest') && ((github.ref == 'refs/heads/master') || startsWith(github.ref, 'refs/tags/'))
      run: dotnet nuget add source https://nuget.pkg.github.com/GITHUB-USERNAME --name GitHub --username GITHUB-USERNAME --password ${{secrets.GITHUB_TOKEN}}
      shell: pwsh
    - name: 'Dotnet NuGet Push to GitHub'
      if: (matrix.os == 'windows-latest') && ((github.ref == 'refs/heads/master') || startsWith(github.ref, 'refs/tags/'))
      run: dotnet nuget push .\Artefacts\*.nupkg --source GitHub --skip-duplicate
      shell: pwsh

    # Push to NuGet
    - name: 'Dotnet NuGet Push to NuGet'
      if: (matrix.os == 'windows-latest') && startsWith(github.ref, 'refs/tags/')
      run: |
        Get-ChildItem .\Artefacts -Filter *.nupkg |
        Where-Object { !$_.Name.Contains('preview') } |
        ForEach-Object { dotnet nuget push $_ --source https://api.nuget.org/v3/index.json --skip-duplicate --api-key ${{secrets.NUGET_API_KEY}} }
      shell: pwsh
